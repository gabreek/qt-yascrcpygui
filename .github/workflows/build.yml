name: Build and Release Executables

on:
  push:
    branches:
      - master # ou a branch principal do seu projeto
  release:
    types: [published] # Aciona o workflow quando um novo release é publicado

jobs:
  build-linux-x86_64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12' # Use a versão do Python que você usa no seu projeto, ex: '3.10' ou '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build for Linux x86_64
        run: pyinstaller main.spec

      - name: List dist directory content (x86_64)
        run: ls -R dist/

      - name: List yascrcpy directory content (x86_64)
        run: ls -l dist/yascrcpy/

      - name: Extract and Rename x86_64 executable
        run: |
          mv dist/yascrcpy/yascrcpy dist/yascrcpy_x86_64
          rm -rf dist/yascrcpy

      - name: Upload x86_64 executable
        uses: actions/upload-artifact@v4
        with:
          name: yascrcpy_x86_64
          path: dist/yascrcpy_x86_64

  build-linux-arm64:
    runs-on: ubuntu-22.04-arm
    steps:
      - name: Echo test
        run: echo "Starting ARM64 build job..."

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12' # Use a mesma versão do Python

      - name: Install build dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y --no-install-recommends \
            build-essential \
            libgl1-mesa-glx \
            libxkbcommon-x11-0 \
            libxcb-icccm4 \
            libxcb-image0 \
            libxcb-keysyms1 \
            libxcb-render-util0 \
            libxcb-xinerama0 \
            libxcb-xinput0 \
            libxcb-xfixes0 \
            libxcb-shape0 \
            libxcb-randr0 \
            libxcb-sync1 \
            libxcb-util1 \
            libxcb-cursor0 \
            libxcb-xrm0 \
            # Adicione outras dependências de sistema que seu projeto PySide6 possa precisar

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build for Linux ARM64
        run: pyinstaller main.spec

      - name: List dist directory content (ARM64)
        run: ls -R dist/

      - name: List yascrcpy directory content (ARM64)
        run: ls -l dist/yascrcpy/

      - name: Extract and Rename ARM64 executable
        run: |
          mv dist/yascrcpy/yascrcpy dist/yascrcpy_arm64
          rm -rf dist/yascrcpy

      - name: Upload ARM64 executable
        uses: actions/upload-artifact@v4
        with:
          name: yascrcpy_arm64
          path: dist/yascrcpy_arm64

  create-github-release:
    runs-on: ubuntu-latest
    needs: [build-linux-x86_64, build-linux-arm64]
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - name: Download x86_64 executable
        uses: actions/download-artifact@v4
        with:
          name: yascrcpy_x86_64
          path: .

      - name: Download ARM64 executable
        uses: actions/download-artifact@v4
        with:
          name: yascrcpy_arm64
          path: .

      - name: List downloaded files
        run: ls -R

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            yascrcpy_x86_64
            yascrcpy_arm64
          prerelease: ${{ contains(github.ref, '-beta') || contains(github.ref, '-rc') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}